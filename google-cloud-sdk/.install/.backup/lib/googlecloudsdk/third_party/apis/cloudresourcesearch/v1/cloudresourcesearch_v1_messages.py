"""Generated message classes for cloudresourcesearch version v1.

An API for searching over Google Cloud Platform Resources.
"""
# NOTE: This file is autogenerated and should not be edited by hand.

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'cloudresourcesearch'


class CloudresourcesearchResourcesSearchRequest(_messages.Message):
  """A CloudresourcesearchResourcesSearchRequest object.

  Fields:
    orderBy: Comma-separated list of string fields for sorting on the search
      result, including fields from the resources and the built-in fields
      (`resourceName` and `resourceType`). Strings are sorted as binary
      strings based on their UTF-8 encoding.  The default sorting order is
      ascending. To specify descending order for a field, a suffix `" desc"`
      should be appended to the field name. For example: `orderBy="foo
      desc,bar"`.
    pageSize: The maximum number of search results to return per page.
      Searches perform best when the `pageSize` is kept as small as possible.
      If not specified, 20 results are returned per page. At most 1000 results
      are returned per page.
    pageToken: A `nextPageToken` returned from previous SearchResources call
      as the starting point for this call.
    query: The query string in search query syntax. If the query is missing or
      empty, all resources are returned.  Any field in a supported resource
      type's JSON schema may be specified in the query. Additionally, every
      resource has a `@type` field whose value is the resource's type URL. See
      `SearchResult.resource_type` for more information.  Example: The
      following query searches for all Google Compute Engine VM instances
      accessible to the caller. The query is further restricted on the
      `labels` and `machineType` fields of the resource. Only VM instances
      with the label `env` set to "prod" and `machineType` including a token
      phrase with the prefix "n1-stand" are matched.   @type:Instance
      labels.env:prod machineType:n1-stand*
  """

  orderBy = _messages.StringField(1)
  pageSize = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(3)
  query = _messages.StringField(4)


class SearchResponse(_messages.Message):
  """Response message for Search().

  Fields:
    matchedCount: The approximate number of documents that match the query. It
      is greater than or equal to the number of documents actually returned.
    nextPageToken: If there are more results, retrieve them by invoking search
      call with the same arguments and this `nextPageToken`. If there are no
      more results, this field is not set.
    results: The list of resources that match the search query.
  """

  matchedCount = _messages.IntegerField(1)
  nextPageToken = _messages.StringField(2)
  results = _messages.MessageField('SearchResult', 3, repeated=True)


class SearchResult(_messages.Message):
  """A single Google Cloud Platform resource returned in
  SearchResourcesResponse.

  Messages:
    ResourceValue: The matched resource, expressed as a JSON object.

  Fields:
    discoveryType: The JSON schema name listed in the discovery document.
      Example: Project
    discoveryUrl: The URL of the discovery document containing the resource's
      JSON schema. Example:
      https://cloudresourcemanager.googleapis.com/$discovery/rest
    resource: The matched resource, expressed as a JSON object.
    resourceName: The RPC resource name. It is a scheme-less URI that includes
      the DNS- compatible API service name. It does not include API version,
      or support %-encoding. Example:
      //cloudresourcemanager.googleapis.com/projects/my-project-123
    resourceType: A domain-scoped name that describes the protocol buffer
      message type. Example:
      type.googleapis.com/google.cloud.resourcemanager.v1.Project
    resourceUrl: The REST URL for accessing the resource. HTTP GET on the
      `resource_url` would return a JSON object equivalent to the `resource`
      below. Example: https://cloudresourcemanager.googleapis.com/v1/projects
      /my-project-123
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ResourceValue(_messages.Message):
    """The matched resource, expressed as a JSON object.

    Messages:
      AdditionalProperty: An additional property for a ResourceValue object.

    Fields:
      additionalProperties: Properties of the object.
    """

    class AdditionalProperty(_messages.Message):
      """An additional property for a ResourceValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  discoveryType = _messages.StringField(1)
  discoveryUrl = _messages.StringField(2)
  resource = _messages.MessageField('ResourceValue', 3)
  resourceName = _messages.StringField(4)
  resourceType = _messages.StringField(5)
  resourceUrl = _messages.StringField(6)


class StandardQueryParameters(_messages.Message):
  """Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    bearer_token: OAuth bearer token.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    pp: Pretty-print response.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    """Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    """V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default=u'json')
  bearer_token = _messages.StringField(4)
  callback = _messages.StringField(5)
  fields = _messages.StringField(6)
  key = _messages.StringField(7)
  oauth_token = _messages.StringField(8)
  pp = _messages.BooleanField(9, default=True)
  prettyPrint = _messages.BooleanField(10, default=True)
  quotaUser = _messages.StringField(11)
  trace = _messages.StringField(12)
  uploadType = _messages.StringField(13)
  upload_protocol = _messages.StringField(14)


encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv',
    package=u'cloudresourcesearch')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1',
    package=u'cloudresourcesearch')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2',
    package=u'cloudresourcesearch')
